name: $(majorMinorVersion).$(semanticVersion) # $(rev:r) # NOTE: rev resets when the default retention period expires

trigger:
- main

pool:
  name: Default

# pipeline variables
variables:
  majorMinorVersion: 1.0
  # semanticVersion counter is automatically incremented by one in each execution of pipeline
  # second parameter is seed value to reset to every time the referenced majorMinorVersion is changed
  semanticVersion: $[counter(variables['majorMinorVersion'], 0)]
  projectName: 'HelloWorldLanaido'
  buildConfiguration: 'Release'

steps:

# Build
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'


# Publish
- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true
    publishVstsFeed: '0d81617e-ea9f-4107-aa42-b11e9eaf7cbe'

# Publish Artifact
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'

# Publish
- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'push'
    nuGetFeedType: 'internal'
    packagesToPush: '$(build.artifactStagingDirectory)/drop.*'
    publishVstsFeed: '0d81617e-ea9f-4107-aa42-b11e9eaf7cbe'

- task: SendEmail@1
  inputs:
    To: 'yarinl464@gmail.com'
    From: 'az58897412@gmail.com'
    Subject: 'Pipeline status - SUCCESS'
    Body: |
      Hello!
      the pipeline was finished successfully
    BodyAsHtml: false
    AddAttachment: false
    SmtpServer: 'smtp.gmail.com'
    SmtpUsername: 'az58897412@gmail.com'
    SmtpPassword: '$(mypassword)'